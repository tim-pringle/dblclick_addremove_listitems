#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 3df80844-557b-42f9-bb02-5fbd2f44c639
# Source File: ..\proj\dblclick_addremove_listitems.psproj
#------------------------------------------------------------------------
#region Project Recovery Data (DO NOT MODIFY)
<#RecoveryData:
FQIAAB+LCAAAAAAABACNkstOwzAQRfeV+g9W9mkeTaCVHC9oAbEBVCq2kROPkcGOI9tB9O9xSFKl
QkIsjz13zviBD1DrTzCnPXWULBcI4Wej36F2P+DxFYwVuiHJKsHRBOPenZDwsCdrxjfxJsvCPL+u
wizl27Cq4jTMecVSnmX11XqLo7F4jI6W46kFEuNojlNzLZnXoWhusyOMiA7AwUBTwyNVUAQBuumE
ZEUQB+TFUeO6dtVaO8j/ju6olOG91BWVZWuTWSe000rRht1+OWj64xfB0XQQkKHaekPyb4OiouHa
KO/g82mndd+MXzQbYDj3+Z4GejLiTTRU9gW9grBK1lLUHyVlzIDyD1tKYZ1woPopWx/G0a/UcoGj
i2/wDaRyYqIVAgAA#>
#endregion
<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2015 v4.2.99
     Generated on:       23-12-2015 20:00
     Generated by:        
     Organization:        
    --------------------------------------------------------------------------------
    .DESCRIPTION
        Script generated by PowerShell Studio 2015
#>


#region Source: Startup.pss
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
SwQAAB+LCAAAAAAABAC9lEtLAzEQgO+C/yH0vOzD7boWsgtS6UXQ4kr1mk1nS2geZZK07L93W0sV
PYiFhlwyEzIfH8MMfQFutoD9A3OMDBcrjK5GN6P6+ooQ+oxiJTSTMyHhiSmoG8fQ+U28sZYmv14P
f+6tBdVKAfYQf2X6WlluUIo2IosjaRyn+xORqZfOI1QavEMmIzL3Qw3+CP2rWYOu2rJkBS9us0k+
hvRuQpNT1Z+UprcOVAhG/Cb00uxsPDOobBDivk9hQMh2Qq/OYaV5V3Rll2XLImU5+5v1rmQYJ4HA
ncG+AdwKDme17N92U4MQRO9oNUczqF3A7RR+zjZNvi+P+gNBqg7+SwQAAA==#>
#endregion
#----------------------------------------------
#region Import Assemblies
#----------------------------------------------
[void][Reflection.Assembly]::Load('mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
[void][Reflection.Assembly]::Load('System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
[void][Reflection.Assembly]::Load('System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.ServiceProcess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
#endregion Import Assemblies

#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main {
<#
    .SYNOPSIS
        The Main function starts the project application.
    
    .PARAMETER Commandline
        $Commandline contains the complete argument string passed to the script packager executable.
    
    .NOTES
        Use this function to initialize your script and to call GUI forms.
		
    .NOTES
        To get the console output in the Packager (Forms Engine) use: 
		$ConsoleOutput (Type: System.Collections.ArrayList)
#>
	Param ([String]$Commandline)
		
	#--------------------------------------------------------------------------
	#TODO: Add initialization script here (Load modules and check requirements)
	
	
	#--------------------------------------------------------------------------
	
	if((Call-MainForm_psf) -eq 'OK')
	{
		
	}
	
	$global:ExitCode = 0 #Set the exit code for the Packager
}






#endregion Source: Startup.pss

#region Source: Globals.ps1
	#--------------------------------------------
	# Declare Global Variables and Functions here
	#--------------------------------------------
	
	
	#Sample function that provides the location of the script
	function Get-ScriptDirectory
	{
	<#
		.SYNOPSIS
			Get-ScriptDirectory returns the proper location of the script.
	
		.OUTPUTS
			System.String
		
		.NOTES
			Returns the correct path within a packaged executable.
	#>
		[OutputType([string])]
		param ()
		if ($hostinvocation -ne $null)
		{
			Split-Path $hostinvocation.MyCommand.path
		}
		else
		{
			Split-Path $script:MyInvocation.MyCommand.Path
		}
	}
	
	#Sample variable that provides the location of the script
	[string]$ScriptDirectory = Get-ScriptDirectory
	
	
	#endregion Source: Globals.ps1

#region Source: mainform.psf
function Call-mainform_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
kTQAAB+LCAAAAAAABADtW11zokoQfb9V9z9QPtwnKwrIZq0brUKMxqxrVkVQXrYGmOjEgbGGQUN+
/Q6oifEj6iaxshtMxdKhm+7T04fWo150oEOmkEZVwIDAHwSI+KWMlCn/+48gXNxQNEQ+wDWEYQt4
sOwB5N8S6p1NgtuL3MbhuZN9Bx0msGgCS5luFDDonZnId8ksOKtx3/l9Vth2KCsYixwKZ/n4Lyto
IWYhhSUfhowCnBV+hDZGzjcY6WQM/ZJ9fg4UR/kiFuUCzH8tZgSfp1LKqK7bhTSGlBGcEcIu5cYZ
jfiMEhzMAfJsf1AygZRFC68KcMYawYRmyuYIMXiRWxrscNAwgj7rogeYKcvil6wgSl/3OsXFypSf
MtzroMN7lilXCYcOBR7SGQtV6JFNv8spz2bh1CTAXY3yM164yCUmS/v9m1UJGSP+u2+XzfwORzSF
L+3WZmGaxAGMJ5Api3IxK3yRN0qyq/qPAQ/wWG5vVpAOCaADu+G78J67HGKd7O1/mP1/gHEvgAYK
QoC7LMJwpVt1Gm5FstoQSeOsIP+ZLKx1RG7eEh+xQXgrv6o75MIx3cGjvWdrSIe3xvCUrcFhv01f
NFHADARn794ZOGA6Oa4xeGVCz18x4CYNnuNLeOY+VxC4kL4fppWMeE4deAs5JAcu8naSHDTiTUIG
aYw6twohF2N4Ar2/Z1YIcp7MroMJkhT9YH6IEidI8fwQe0IZ8od8bgUO9F3+8ChWiYcRJa4gB86n
aZcBBhseGMIKHIEpiglTAzg4ZCzE3c2nMmQA4c0ZvsawLsScMNBNEtVGwB9Cd1HGn9uOPaff2snm
rwQWpJ2fY2XpT2JujRLvM3I3Xptjfx2DY/vjarHc3djuVLVo+AEDvBRVGDgUTRihggc9G1L+Ol29
VFW1motvaltd3i6Tx1pRh/1W3jLzYc8zPLtu3Ll1PLWR0rJMEVn962vbs6Y9yYiAWQtAfzJKjo9H
U7vewc7QSc6lezVmte8rjtzCtnkdwJ4yss3edVu6H/G1m4EpYs1oTSxJGblXRmS1Jzow3XDQ74iO
14u0sRj7YQd3FKfea3ckI+SxJ4N8LbJkg1mmkndmlxW1zf/V742q0VIcuYPtrtKD/Qo2xXxdHcap
9MKB3Jk6w0E1fmaIj3Z9YCpjW3YfmmNr6njiQ1OrmDzGAzCL4Q+9HX7XCrPmnRo0LluifZXkVbQ9
Q3Svrke2Nhv2rgxk1/FdVzIUo16kllkoDu4ceaAbdy19cH+jf89bulq4aQ/igqsN44XY4/sJP2YC
05C7fW7THtRin7phTYHZHja9Vt6WG6Qn4we3brAmbuUdD4dWNK5XYpyV9hwnGj3tn9zhe6T439pJ
+G/arFR63iW8T1Q6DL340rWkCb+eP64966jcZkvt5lHKipQVfxMrpJQVKStSVqyxQk5ZkbIiZcUa
KwpvworjtATpWCkhfif08cSE/J8nJsSFfL2ckJzlMEHh+ZOPpS1MeZwuCakDl2Q46rMgFWMyq/K1
HRLqXmHi48kSG6JE8Kw8CR9XBIlnF4G9+HnCcCE58zRFscDvvu7/MGxNwfh40zedvens3T97Nyev
sF28eHHwro/dlAwpGf4OMmzXLFIypGT4hGTYLlWkZEjJ8AnJsF2hSMmQkuETkkF5JRn2vt1+kul4
i28qXDslui1iyl7nuV5XKEhZQZI2BcHfkOuOEeveSKo7Rqg7Vg07jQC0W+t58evGq19V2VsVE7ls
xPdaXhd8PnRJdnwn583LIorrcvUfVBadvEdBlBcLogYBn5YYwWB5nsVKVPYCh1CM7DfAy6+1y7Ou
R5lX+BQx3nwX90eMf+1xmkAUzPhl/Hdi5eVb5fb8VhRdJQ9ksD9W38OnwYQob1NCo/hnFciBv7Vl
R6PTCIUngbdAxbnJob0Dtsenc25f5FZ/glT+BUYgEfCRNAAA#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.ServiceProcess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$AddServers = New-Object 'System.Windows.Forms.Form'
	$btnRemove = New-Object 'System.Windows.Forms.Button'
	$btnAdd = New-Object 'System.Windows.Forms.Button'
	$lstTo = New-Object 'System.Windows.Forms.ListView'
	$lstFrom = New-Object 'System.Windows.Forms.ListView'
	$lstviewSourceComputers = New-Object 'System.Windows.Forms.ListView'
	$sourceComputerName = New-Object 'System.Windows.Forms.ColumnHeader'
	$columnComputernameFrom = New-Object 'System.Windows.Forms.ColumnHeader'
	$columnComputerTo = New-Object 'System.Windows.Forms.ColumnHeader'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	
	$AddServers_Load={
	    $btnAdd.Enabled = $false
	    $btnRemove.Enabled = $false
	}
	
	
	
	
	$lstFrom_SelectedIndexChanged={
	    
	    If ($lstFrom.Items.Count -gt 0)
	    {
	        $btnAdd.Enabled = $true
	    }
	    Else
	    {
	        $btnAdd.Enabled = $False
	    }
	    
	    $btnRemove.enabled = $false
	}
	
	$lstTo_SelectedIndexChanged={
		 If ($lstTo.Items.Count -ge 0)
	    {
	        $btnRemove.Enabled = $true
	    }
	    Else {
	        $btnRemove.Enabled = $False
	    }
	    $btnAdd.Enabled = $false
	}
	
	$btnAdd_Click={
	    $text = $lstFrom.SelectedItems[0].SubItems[0].Text
	    $item = $lstTo.FindItemWithText($text)
	    
	    if (!$item)
	    {
	        $lstTo.Items.Add($text)
	        $lstFrom.Items.Remove($lstFrom.SelectedItems[0])
	    }
	    
	}
	
	$btnRemove_Click={
	    $text = $lstTo.SelectedItems[0].SubItems[0].Text
	    $item = $lstFrom.FindItemWithText($text)
	    
	    if (!$item)
	    {
	        $lstFrom.Items.Add($text)
	        $lstTo.Items.Remove($lstTo.SelectedItems[0])
	    }
	}
	
	
	
	$lstTo_DoubleClick={
	    $text = $lstTo.SelectedItems[0].SubItems[0].Text
	    $lstTo.Items.Remove($lstTo.SelectedItems[0])
	    $lstFrom.Items.Add($text)
	}
	
	
	$lstFrom_DoubleClick={
	    $text = $lstFrom.SelectedItems[0].SubItems[0].Text
	    $lstFrom.Items.Remove($lstFrom.SelectedItems[0])
	    $lstTo.Items.Add($text)
	}
	
	
		# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$AddServers.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
		$script:mainform_lstTo = $lstTo.SelectedItems
		$script:mainform_lstFrom = $lstFrom.SelectedItems
		$script:mainform_lstviewSourceComputers = $lstviewSourceComputers.SelectedItems
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$btnRemove.remove_Click($btnRemove_Click)
			$btnAdd.remove_Click($btnAdd_Click)
			$lstTo.remove_SelectedIndexChanged($lstTo_SelectedIndexChanged)
			$lstTo.remove_DoubleClick($lstTo_DoubleClick)
			$lstFrom.remove_SelectedIndexChanged($lstFrom_SelectedIndexChanged)
			$lstFrom.remove_DoubleClick($lstFrom_DoubleClick)
			$AddServers.remove_Load($AddServers_Load)
			$AddServers.remove_Load($Form_StateCorrection_Load)
			$AddServers.remove_Closing($Form_StoreValues_Closing)
			$AddServers.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch [Exception]
		{ }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$AddServers.SuspendLayout()
	#
	# AddServers
	#
	$AddServers.Controls.Add($btnRemove)
	$AddServers.Controls.Add($btnAdd)
	$AddServers.Controls.Add($lstTo)
	$AddServers.Controls.Add($lstFrom)
	$AddServers.BackColor = 'White'
	$AddServers.ClientSize = '316, 128'
	$AddServers.Name = 'AddServers'
	$AddServers.Text = 'Double Click Demo'
	$AddServers.add_Load($AddServers_Load)
	#
	# btnRemove
	#
	$btnRemove.Location = '139, 63'
	$btnRemove.Name = 'btnRemove'
	$btnRemove.Size = '31, 23'
	$btnRemove.TabIndex = 3
	$btnRemove.Text = '<'
	$btnRemove.UseVisualStyleBackColor = $True
	$btnRemove.add_Click($btnRemove_Click)
	#
	# btnAdd
	#
	$btnAdd.Location = '139, 34'
	$btnAdd.Name = 'btnAdd'
	$btnAdd.Size = '31, 23'
	$btnAdd.TabIndex = 2
	$btnAdd.Text = '>'
	$btnAdd.UseVisualStyleBackColor = $True
	$btnAdd.add_Click($btnAdd_Click)
	#
	# lstTo
	#
	[void]$lstTo.Columns.Add($columnComputerTo)
	$lstTo.Location = '176, 12'
	$lstTo.Name = 'lstTo'
	$lstTo.Size = '121, 97'
	$lstTo.Sorting = 'Ascending'
	$lstTo.TabIndex = 1
	$lstTo.UseCompatibleStateImageBehavior = $False
	$lstTo.View = 'Details'
	$lstTo.add_SelectedIndexChanged($lstTo_SelectedIndexChanged)
	$lstTo.add_DoubleClick($lstTo_DoubleClick)
	#
	# lstFrom
	#
	[void]$lstFrom.Columns.Add($columnComputernameFrom)
	$System_Windows_Forms_ListViewItem_1 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer1')
	[void]$lstFrom.Items.Add($System_Windows_Forms_ListViewItem_1)
	$System_Windows_Forms_ListViewItem_2 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer2')
	[void]$lstFrom.Items.Add($System_Windows_Forms_ListViewItem_2)
	$System_Windows_Forms_ListViewItem_3 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer3')
	[void]$lstFrom.Items.Add($System_Windows_Forms_ListViewItem_3)
	$System_Windows_Forms_ListViewItem_4 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer4')
	[void]$lstFrom.Items.Add($System_Windows_Forms_ListViewItem_4)
	$lstFrom.Location = '12, 12'
	$lstFrom.Name = 'lstFrom'
	$lstFrom.Size = '121, 97'
	$lstFrom.Sorting = 'Ascending'
	$lstFrom.TabIndex = 0
	$lstFrom.UseCompatibleStateImageBehavior = $False
	$lstFrom.View = 'Details'
	$lstFrom.add_SelectedIndexChanged($lstFrom_SelectedIndexChanged)
	$lstFrom.add_DoubleClick($lstFrom_DoubleClick)
	#
	# lstviewSourceComputers
	#
	$lstviewSourceComputers.AllowDrop = $True
	[void]$lstviewSourceComputers.Columns.Add($sourceComputerName)
	$lstviewSourceComputers.ForeColor = '0, 114, 188'
	$System_Windows_Forms_ListViewItem_5 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer 1')
	[void]$lstviewSourceComputers.Items.Add($System_Windows_Forms_ListViewItem_5)
	$System_Windows_Forms_ListViewItem_6 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer 2')
	[void]$lstviewSourceComputers.Items.Add($System_Windows_Forms_ListViewItem_6)
	$System_Windows_Forms_ListViewItem_7 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer 3')
	[void]$lstviewSourceComputers.Items.Add($System_Windows_Forms_ListViewItem_7)
	$System_Windows_Forms_ListViewItem_8 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer 4')
	[void]$lstviewSourceComputers.Items.Add($System_Windows_Forms_ListViewItem_8)
	$System_Windows_Forms_ListViewItem_9 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer 5')
	[void]$lstviewSourceComputers.Items.Add($System_Windows_Forms_ListViewItem_9)
	$lstviewSourceComputers.Location = '0, 0'
	$lstviewSourceComputers.Name = 'lstviewSourceComputers'
	$lstviewSourceComputers.Size = '442, 222'
	$lstviewSourceComputers.Sorting = 'Ascending'
	$lstviewSourceComputers.TabIndex = 0
	$lstviewSourceComputers.UseCompatibleStateImageBehavior = $False
	$lstviewSourceComputers.View = 'Details'
	#
	# sourceComputerName
	#
	$sourceComputerName.Text = 'Computername'
	$sourceComputerName.Width = 438
	#
	# columnComputernameFrom
	#
	$columnComputernameFrom.Text = 'Computername'
	$columnComputernameFrom.Width = 117
	#
	# columnComputerTo
	#
	$columnComputerTo.Text = 'Computername'
	$columnComputerTo.Width = 115
	$AddServers.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $AddServers.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$AddServers.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$AddServers.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$AddServers.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $AddServers.ShowDialog()

}
#endregion Source: mainform.psf

#Start the application
Main ($CommandLine)
