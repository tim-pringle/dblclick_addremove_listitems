#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 3df80844-557b-42f9-bb02-5fbd2f44c639
# Source File: ..\proj\dblclick_addremove_listitems.psproj
#------------------------------------------------------------------------
#region Project Recovery Data (DO NOT MODIFY)
<#RecoveryData:
FQIAAB+LCAAAAAAABACNkstOwzAQRfeV+g9W9mkeTaCVHC9oAbEBVCq2kROPkcGOI9tB9O9xSFKl
QkIsjz13zviBD1DrTzCnPXWULBcI4Wej36F2P+DxFYwVuiHJKsHRBOPenZDwsCdrxjfxJsvCPL+u
wizl27Cq4jTMecVSnmX11XqLo7F4jI6W46kFEuNojlNzLZnXoWhusyOMiA7AwUBTwyNVUAQBuumE
ZEUQB+TFUeO6dtVaO8j/ju6olOG91BWVZWuTWSe000rRht1+OWj64xfB0XQQkKHaekPyb4OiouHa
KO/g82mndd+MXzQbYDj3+Z4GejLiTTRU9gW9grBK1lLUHyVlzIDyD1tKYZ1woPopWx/G0a/UcoGj
i2/wDaRyYqIVAgAA#>
#endregion
<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2015 v4.2.99
     Generated on:       23-12-2015 16:29
     Generated by:        
     Organization:        
    --------------------------------------------------------------------------------
    .DESCRIPTION
        Script generated by PowerShell Studio 2015
#>


#region Source: Startup.pss
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
SwQAAB+LCAAAAAAABAC9lEtLAzEQgO+C/yH0vOzD7boWsgtS6UXQ4kr1mk1nS2geZZK07L93W0sV
PYiFhlwyEzIfH8MMfQFutoD9A3OMDBcrjK5GN6P6+ooQ+oxiJTSTMyHhiSmoG8fQ+U28sZYmv14P
f+6tBdVKAfYQf2X6WlluUIo2IosjaRyn+xORqZfOI1QavEMmIzL3Qw3+CP2rWYOu2rJkBS9us0k+
hvRuQpNT1Z+UprcOVAhG/Cb00uxsPDOobBDivk9hQMh2Qq/OYaV5V3Rll2XLImU5+5v1rmQYJ4HA
ncG+AdwKDme17N92U4MQRO9oNUczqF3A7RR+zjZNvi+P+gNBqg7+SwQAAA==#>
#endregion
#----------------------------------------------
#region Import Assemblies
#----------------------------------------------
[void][Reflection.Assembly]::Load('mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
[void][Reflection.Assembly]::Load('System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
[void][Reflection.Assembly]::Load('System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.ServiceProcess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
#endregion Import Assemblies

#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main {
<#
    .SYNOPSIS
        The Main function starts the project application.
    
    .PARAMETER Commandline
        $Commandline contains the complete argument string passed to the script packager executable.
    
    .NOTES
        Use this function to initialize your script and to call GUI forms.
		
    .NOTES
        To get the console output in the Packager (Forms Engine) use: 
		$ConsoleOutput (Type: System.Collections.ArrayList)
#>
	Param ([String]$Commandline)
		
	#--------------------------------------------------------------------------
	#TODO: Add initialization script here (Load modules and check requirements)
	
	
	#--------------------------------------------------------------------------
	
	if((Call-MainForm_psf) -eq 'OK')
	{
		
	}
	
	$global:ExitCode = 0 #Set the exit code for the Packager
}






#endregion Source: Startup.pss

#region Source: Globals.ps1
	#--------------------------------------------
	# Declare Global Variables and Functions here
	#--------------------------------------------
	
	
	#Sample function that provides the location of the script
	function Get-ScriptDirectory
	{
	<#
		.SYNOPSIS
			Get-ScriptDirectory returns the proper location of the script.
	
		.OUTPUTS
			System.String
		
		.NOTES
			Returns the correct path within a packaged executable.
	#>
		[OutputType([string])]
		param ()
		if ($hostinvocation -ne $null)
		{
			Split-Path $hostinvocation.MyCommand.path
		}
		else
		{
			Split-Path $script:MyInvocation.MyCommand.Path
		}
	}
	
	#Sample variable that provides the location of the script
	[string]$ScriptDirectory = Get-ScriptDirectory
	
	
	#endregion Source: Globals.ps1

#region Source: mainform.psf
function Call-mainform_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
kjQAAB+LCAAAAAAABADtW11zokoQfb9V9z9QPtwnKwrIZq0brUKMxqxrVkVQXraGYaITB7CGQUN+
/Q6oifEj6iaxshtMxdKhm+7T04fWo150EPSniEZVwIDAHwTY90oZKVP+9x9BuLiheIg9QGqYoBZw
UdkF2Lv1qXs2CW4vchuH5072HYJMYNEElTLdKGDIPTOx5/iz4KzGfef3WWHboaxgLHIonOXjv6yg
hYSFFJU8FDIKSFb4EdoEw28o0v0x8kr2+TlQoPJFLMoFlP9azAgeT6WUUR2ni2gMKSPAESYO5cYZ
zfcY9UkwB8iz/UH9CaIsWnhVABxrPvFppmyOMEMXuaXBDgeNYOSxLn5AmbIsfskKovR1r1NcrEz5
KcO9Djq6Z5lylYKhADxHqPKjQhW5/qbj5ZSns/Bq+sBZDfMzXrjIJSZL+/27VQkZ87133y+beR2O
aIpe2q7NyjR9CBhPIFMW5WJW+CJvlGRX+R8DHuCx3N+sIB0SQAd2w3PQPXc5xDrZ3P8I+/8A416A
DByEgHRZRNBKu+o03IpktSF4s8LxCvKfycJaR+TmLfERG4S38qu6Qy4c0x082nu2hnR4awxP2Roc
9tv0RRMHzMBo9u6dQQKm+8c1Bq9M6HorBtykwXN8Cc/c5woBB9H3w7SSEc+pg24RhwTRIm+Y5KD5
7iRkiMaoc6sQcjGGJ9D7e2aFIOfJ8DqYIEnRD+aHKHGCFM8Psfcpw96Qz60AIs/hD49ilXgYUeIK
cuA2QV0GGGq4YIgqaASmOCZMDZDgkLEQdzcfy4gBTDaH+BrDuohwwiAnSVQbAW+InEUZf2479px+
ayer+ryN0IK083OsLP1JzK1R3/2M3I3X5thfx+DY/rhaLHc3tjtVLRpewAAvRRUFkOIJ86ngItdG
lL9QVy9VVa3m4pvaVpe3y+SxVtRRv5W3zHzYcw3Xrht3Tp1Mbay0LFPEVv/62nataU8yImDWAtCf
jJLj49HUrncIHMLkXLpbY1b7vgLlFrHN6wD1lJFt9q7b0v2Ir90MTJFoRmtiScrIuTIiqz3RgemE
g35HhG4v0sZi7Ecg6Siw3mt3JCPksSeDfC2yZINZppKHs8uK2ub/6vdG1WgpUO4Qu6v0UL9CTDFf
V4dxKr1wIHemcDioxs8M8dGuD0xlbMvOQ3NsTaErPjS1isljPACzGP7Q2+F3rTBr3qlB47Il2ldJ
XkXbNUTn6npka7Nh78rAdp3cdSVDMepFapmF4uAOygPduGvpg/sb/Xve0tXCTXsQF1xtGC/EHt9P
+DETmIbc7XOb9qAW+9QNawrM9rDptvK23PB7Mnlw6gZrklYeuiS0onG9EuOstOc48ehp/+QO3yPF
+9ZOwn/TZqXS8y7hfaLSYejGl64lTfj1/HHtWUflNltqN49SVqSs+JtYIaWsSFmRsmKNFXLKipQV
KSvWWFF4E1YcpyVIx0oJ8Tuhjycm5P88MSEu5OvlhOQshwkKz598LG1hyuN0/ZBCtCTDUR8GqYT4
s/izlh0S6l5h4uPJEhuiRPCsPAkfVwSJZxeBvfh5wmghOfM0RbHA777u/zRsTcH4eNM3nb3p7N0/
ezcnr7BdvHhx8K6P3ZQMKRn+DjJs1yxSMqRk+IRk2C5VpGRIyfAJybBdoUjJkJLhE5JBeSUZ9r7d
fpLpeItvKlw7JbotYspe57leVyhIWUGSNgXB35DrjhHr3kiqO0aoO1YNO40AtFvrefH7xqtfVdlb
FRM7bMT3Wl4XfD50SXZ8J+fNyyKK63L1H1QW3X+PgigvFkQNAj4tCUbB8jyLlajsBtCnBNtvgJdf
a5dnXY8yr/ApYrz5Lu6PGP/c4zSBKJjxy/jvxMrLt8rt+a0oOkoeyGB/rL5LToMJU96mPo3in1Vg
iH5ry45Gp/kUnQTeAhXnJof2Dtgen865fZFb/Q1S+Revta3lkjQAAA==#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.ServiceProcess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$AddServers = New-Object 'System.Windows.Forms.Form'
	$btnRemove = New-Object 'System.Windows.Forms.Button'
	$btnAdd = New-Object 'System.Windows.Forms.Button'
	$lstTo = New-Object 'System.Windows.Forms.ListView'
	$lstFrom = New-Object 'System.Windows.Forms.ListView'
	$lstviewSourceComputers = New-Object 'System.Windows.Forms.ListView'
	$sourceComputerName = New-Object 'System.Windows.Forms.ColumnHeader'
	$columnComputernameFrom = New-Object 'System.Windows.Forms.ColumnHeader'
	$columnComputerTo = New-Object 'System.Windows.Forms.ColumnHeader'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	
	$AddServers_Load={
	    $btnAdd.Enabled = $false
	    $btnRemove.Enabled = $false
	}
	
	
	
	
	$lstFrom_SelectedIndexChanged={
	    
	    If ($lstFrom.Items.Count -gt 0)
	    {
	        $btnAdd.Enabled = $true
	    }
	    Else
	    {
	        $btnAdd.Enabled = $False
	    }
	    
	    $btnRemove.enabled = $false
	}
	
	$lstTo_SelectedIndexChanged={
		 If ($lstTo.Items.Count -ge 0)
	    {
	        $btnRemove.Enabled = $true
	    }
	    Else {
	        $btnRemove.Enabled = $False
	    }
	    $btnAdd.Enabled = $false
	}
	
	$btnAdd_Click={
	    $text = $lstFrom.SelectedItems[0].SubItems[0].Text
	    $item = $lstTo.FindItemWithText($text)
	    
	    if (!$item)
	    {
	        $lstTo.Items.Add($text)
	        $lstFrom.Items.Remove($lstFrom.SelectedItems[0])
	    }
	    
	}
	
	$btnRemove_Click={
	    $text = $lstTo.SelectedItems[0].SubItems[0].Text
	    $item = $lstFrom.FindItemWithText($text)
	    
	    if (!$item)
	    {
	        $lstFrom.Items.Add($text)
	        $lstTo.Items.Remove($lstTo.SelectedItems[0])
	    }
	}
	
	
	
	$lstTo_DoubleClick={
	    $text = $lstTo.SelectedItems[0].SubItems[0].Text
	    $lstTo.Items.Remove($lstTo.SelectedItems[0])
	    $lstFrom.Items.Add($text)
	}
	
	
	$lstFrom_DoubleClick={
	    $text = $lstFrom.SelectedItems[0].SubItems[0].Text
	    $lstFrom.Items.Remove($lstFrom.SelectedItems[0])
	    $lstTo.Items.Add($text)
	}
	
	
		# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$AddServers.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
		$script:mainform_lstTo = $lstTo.SelectedItems
		$script:mainform_lstFrom = $lstFrom.SelectedItems
		$script:mainform_lstviewSourceComputers = $lstviewSourceComputers.SelectedItems
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$btnRemove.remove_Click($btnRemove_Click)
			$btnAdd.remove_Click($btnAdd_Click)
			$lstTo.remove_SelectedIndexChanged($lstTo_SelectedIndexChanged)
			$lstTo.remove_DoubleClick($lstTo_DoubleClick)
			$lstFrom.remove_SelectedIndexChanged($lstFrom_SelectedIndexChanged)
			$lstFrom.remove_DoubleClick($lstFrom_DoubleClick)
			$AddServers.remove_Load($AddServers_Load)
			$AddServers.remove_Load($Form_StateCorrection_Load)
			$AddServers.remove_Closing($Form_StoreValues_Closing)
			$AddServers.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch [Exception]
		{ }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$AddServers.SuspendLayout()
	#
	# AddServers
	#
	$AddServers.Controls.Add($btnRemove)
	$AddServers.Controls.Add($btnAdd)
	$AddServers.Controls.Add($lstTo)
	$AddServers.Controls.Add($lstFrom)
	$AddServers.BackColor = 'White'
	$AddServers.ClientSize = '316, 128'
	$AddServers.Name = 'AddServers'
	$AddServers.Text = 'Drag and Drop Demo'
	$AddServers.add_Load($AddServers_Load)
	#
	# btnRemove
	#
	$btnRemove.Location = '139, 63'
	$btnRemove.Name = 'btnRemove'
	$btnRemove.Size = '31, 23'
	$btnRemove.TabIndex = 3
	$btnRemove.Text = '<'
	$btnRemove.UseVisualStyleBackColor = $True
	$btnRemove.add_Click($btnRemove_Click)
	#
	# btnAdd
	#
	$btnAdd.Location = '139, 34'
	$btnAdd.Name = 'btnAdd'
	$btnAdd.Size = '31, 23'
	$btnAdd.TabIndex = 2
	$btnAdd.Text = '>'
	$btnAdd.UseVisualStyleBackColor = $True
	$btnAdd.add_Click($btnAdd_Click)
	#
	# lstTo
	#
	[void]$lstTo.Columns.Add($columnComputerTo)
	$lstTo.Location = '176, 12'
	$lstTo.Name = 'lstTo'
	$lstTo.Size = '121, 97'
	$lstTo.Sorting = 'Ascending'
	$lstTo.TabIndex = 1
	$lstTo.UseCompatibleStateImageBehavior = $False
	$lstTo.View = 'Details'
	$lstTo.add_SelectedIndexChanged($lstTo_SelectedIndexChanged)
	$lstTo.add_DoubleClick($lstTo_DoubleClick)
	#
	# lstFrom
	#
	[void]$lstFrom.Columns.Add($columnComputernameFrom)
	$System_Windows_Forms_ListViewItem_1 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer1')
	[void]$lstFrom.Items.Add($System_Windows_Forms_ListViewItem_1)
	$System_Windows_Forms_ListViewItem_2 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer2')
	[void]$lstFrom.Items.Add($System_Windows_Forms_ListViewItem_2)
	$System_Windows_Forms_ListViewItem_3 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer3')
	[void]$lstFrom.Items.Add($System_Windows_Forms_ListViewItem_3)
	$System_Windows_Forms_ListViewItem_4 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer4')
	[void]$lstFrom.Items.Add($System_Windows_Forms_ListViewItem_4)
	$lstFrom.Location = '12, 12'
	$lstFrom.Name = 'lstFrom'
	$lstFrom.Size = '121, 97'
	$lstFrom.Sorting = 'Ascending'
	$lstFrom.TabIndex = 0
	$lstFrom.UseCompatibleStateImageBehavior = $False
	$lstFrom.View = 'Details'
	$lstFrom.add_SelectedIndexChanged($lstFrom_SelectedIndexChanged)
	$lstFrom.add_DoubleClick($lstFrom_DoubleClick)
	#
	# lstviewSourceComputers
	#
	$lstviewSourceComputers.AllowDrop = $True
	[void]$lstviewSourceComputers.Columns.Add($sourceComputerName)
	$lstviewSourceComputers.ForeColor = '0, 114, 188'
	$System_Windows_Forms_ListViewItem_5 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer 1')
	[void]$lstviewSourceComputers.Items.Add($System_Windows_Forms_ListViewItem_5)
	$System_Windows_Forms_ListViewItem_6 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer 2')
	[void]$lstviewSourceComputers.Items.Add($System_Windows_Forms_ListViewItem_6)
	$System_Windows_Forms_ListViewItem_7 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer 3')
	[void]$lstviewSourceComputers.Items.Add($System_Windows_Forms_ListViewItem_7)
	$System_Windows_Forms_ListViewItem_8 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer 4')
	[void]$lstviewSourceComputers.Items.Add($System_Windows_Forms_ListViewItem_8)
	$System_Windows_Forms_ListViewItem_9 = New-Object 'System.Windows.Forms.ListViewItem' ('Computer 5')
	[void]$lstviewSourceComputers.Items.Add($System_Windows_Forms_ListViewItem_9)
	$lstviewSourceComputers.Location = '0, 0'
	$lstviewSourceComputers.Name = 'lstviewSourceComputers'
	$lstviewSourceComputers.Size = '442, 222'
	$lstviewSourceComputers.Sorting = 'Ascending'
	$lstviewSourceComputers.TabIndex = 0
	$lstviewSourceComputers.UseCompatibleStateImageBehavior = $False
	$lstviewSourceComputers.View = 'Details'
	#
	# sourceComputerName
	#
	$sourceComputerName.Text = 'Computername'
	$sourceComputerName.Width = 438
	#
	# columnComputernameFrom
	#
	$columnComputernameFrom.Text = 'Computername'
	$columnComputernameFrom.Width = 117
	#
	# columnComputerTo
	#
	$columnComputerTo.Text = 'Computername'
	$columnComputerTo.Width = 115
	$AddServers.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $AddServers.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$AddServers.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$AddServers.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$AddServers.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $AddServers.ShowDialog()

}
#endregion Source: mainform.psf

#Start the application
Main ($CommandLine)
